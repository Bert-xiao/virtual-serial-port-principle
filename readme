一、串口发送的原理 
   1、假定串口波特率为9600位/秒,则传送一位值的时间为:1000000(us)/9600=104.16us。
   2、假定要发送的数据data,其位格式如下:    bit7,bit6,bit5,bit4,bit3,bit2,bit1,bit0    
      bit7是data的最高位,bit0是data的嘴低位,则:
      data= bit7 * 2^7 + bit6 * 2^+ bit5 * 2^5 + bit4 * 2^4+ bit3 * 2^3 + bit2 * 2^2 ++ bit1 * 2^1 + bit0 * 2^0
   3、串口在发送数据时,总是先发送起始位start位,start是个“低电平位值”,所以TXD脚由高到低发生跳变,其低电平的时间为104.16us。接着发送数据data的
      的bit0,bit1,bit2,bit3,bit4,bit5,bit6,bit7最后发送停止位stop位,stop是个高电平位值,其高电平的时间为104.16us。
   4、对于8位数据通讯(N8),则有10位值要被发送出去,即发送顺序如下: star+ bit0 + bit1 + bit2 + bit3 + bit4 + bit5 + bit6 + bit7 + stop 
      我们扩展模拟接收串口,主要是讲这个通讯。
   5、对于9位数据通讯(N8、1),则有11位值要被发送出去,即发送顺序如下: 
   start+ bit0 + bit1 + bit2 + bit3 + bit4 + bit5 + bit6 + bit7 + + TX8 + stop 
   上面的TX8有3种意思
   ① TX8是从机地址/数据识别位,TX8=1,表示data的值为地址,TX8=0,表示data值为数据。 
   ② TX8是奇偶校验位。对于偶校验,校验位就定义为1。对于奇校验,校验位就定义为0。 若是奇校验,则发送数据的格式为: 
      start + bit0 + bit1 + bit2 + bit3 + bit4 + bit5 + bit6 + bit7 + 0 + stop 
      若是偶校验,则发送数据的格式为:
      start + bit0 + bit1 + bit2 + bit3 + bit4 + bit5 + bit6 + bit7 + 1 + stop 
      奇偶校验能够检测出信息传输过程中的部分误码(1位误码能检出,2位及2位以上误码不能检出),同时,它不能纠错。但由于其实现简单,仍得到了广泛使用。 
   ③ TX8是停止位,这样就有两个停止位(stop1,stop2)。也就是我们通常所说的8位数据通讯(N8)这样发送数据的格式为:
      start + bit0 + bit1 + bit2 + bit3 + bit4 + bit5 + bit6 + bit7 + stop1 + stop2
   注意：stop1 = 1 stop2 =1
   使用两个停止位，硬件串口发送位数为11位，但硬件串口接收位数是10位的，也是可以收到正确的数据。
二、模拟串口接收的原理:
   通过对串口发送的数据格式,分析可以知道,每一位值的发送时间都要占用104.16us。所以串口在接收时,总是先收到start位,
   接着是bit0、bit1、bit2 、bit3、bit4、bit5、bit6、bit7,最后是stop位。我们可以设想模拟硬件串口“位采集”情况,假如“位采集”发生在104.16us的中间位置,
   是不是模拟串口就可以接收数据了呢?显然是可行
   1、当start到来时,下降沿产生中断,进入“下降沿中断服务程序”,立即打开定时器,并设置定时器在第52us时发生中断,将bit_counter=1,再设置不使能下降沿中断,
      退出“下降沿中断服务程序”。
   2、设置定时器为每104us时间产生一次中断,当定时器产生中断时,将收到的位值temp_bit右移入data中。
   3、bit_counter左移一位。
   4、如果bit_counter=0,则将保存接收到数据data,关闭定时器,使能下降沿中断,本次接收完成。
